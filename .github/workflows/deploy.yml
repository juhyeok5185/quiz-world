name: Build and Deploy

on:
  push:
    branches: [main]

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: 현재 GitHub Actions 퍼블릭 IP 출력
        run: |
          echo "🌍 현재 GitHub Actions 퍼블릭 IP:"
          curl https://ifconfig.me || curl ifconfig.co

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: DockerHub 로그인
        run: |
          echo "🔐 DockerHub 로그인 시작"
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          echo "✅ DockerHub 로그인 완료"

      - name: Build and Push to DockerHub
        run: |
          echo "🔨 Docker 이미지 빌드 및 푸시 시작"
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/quiz-world:latest \
            --push .
          echo "✅ Docker 이미지 푸시 완료"

      - name: SSH 키파일 설정 및 서버 접속 후 이미지 배포
        run: |
          echo "🔧 SSH 비공개 키파일 생성"
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

          echo "🚀 서버에 SSH 접속하여 Docker 이미지 pull 및 컨테이너 재시작"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            echo "⬇️ Docker 이미지 미리 pull"
            docker pull ${{ secrets.DOCKER_USERNAME }}/quiz-world:latest

            echo "📦 기존 컨테이너 중지 및 삭제"
            docker stop quiz-world 2>/dev/null || true
            docker rm quiz-world 2>/dev/null || true

            echo "🚀 컨테이너 실행"
            docker run -d -p 8080:8080 --name quiz-world ${{ secrets.DOCKER_USERNAME }}/quiz-world:latest

            echo "✅ 서버에서 배포 완료"
          EOF
