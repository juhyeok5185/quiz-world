name: Build and Push Docker Image

on:
  push:
    branches: [main]

jobs:
  get-profile:
    runs-on: ubuntu-latest
    outputs:
      profile: ${{ steps.extract-profile.outputs.profile }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Spring Profile
        id: extract-profile
        run: |
          PROFILE=$(grep "^spring.profiles.active" ./src/main/resources/application.properties | cut -d'=' -f2)
          echo "Detected profile: $PROFILE"
          echo "profile=$PROFILE" >> $GITHUB_OUTPUT

  build-and-push:
    needs: get-profile
    if: ${{ needs.get-profile.outputs.profile != 'dev' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: DockerHub 로그인
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push to DockerHub
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/quiz-world:latest \
            --push .

      - name: 🔔 Jenkins 배포 트리거 (Crumb 포함)
        run: |
          echo "📡 Jenkins 요청 시작..."
          CRUMB=$(curl -s -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
            "http://${{ secrets.JENKINS_URL }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)")

          echo "🔐 CRUMB: $CRUMB"

          curl -X POST "http://${{ secrets.JENKINS_URL }}/job/thinkdock-deploy/build" \
            -u "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
            -H "$CRUMB"
